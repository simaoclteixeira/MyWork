@model  PaginacaoFuncionario

@{
    ViewData["Title"] = "Index";
}

<h1>Funcionarios</h1>

<p>
    <a asp-action="Create">Criar Novo</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Procurar por nome: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Procurar" class="btn btn-danger" />
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Nome
            </th>
            <th>
                Numero
            </th>
            <th>
                Email
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Funcionario)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Numero)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.FuncionariosID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.FuncionariosID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.FuncionariosID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@for (int i = 1; i <= Model.TotPaginas; i++) {

@if (i == Model.PagAtual)
{

    <a href="#" class="btn btn-outline-secondary">@i</a>

}
else
{

    <a asp-action="Index" asp-route-page="@i" class="btn btn-outline-info">@i</a>
}}
